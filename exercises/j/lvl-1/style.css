.container {
  font-size: 2rem;
  /* TODO 1: turn this element into a flexbox with "display: flex;"

  I've made the font very large to more easily see that the layout looks wrong.

  For narrow screens it overflows and looks cramped. For large screens it is too narrow. We will fix that.

  */
}

.item3 {
  /* TODO 2: Make item 3 fill as much space as possible, all other elements stay as they are. Use "flex: 1;" */
}

@media all and (max-width: 900px) {
  /* The thing above is a media query. It tells the browser to apply the below styles only for windows with width less than 900px (including 900px) */
  .container {
    /* TODO 3: For widths smaller than 900px, the items look too cramped so we are going to distribute them across rows.

    Let them wrap with "flex-wrap: wrap;"

    I've already written the media query for you
    */
  }
  .item1, .item2, .item3, .item4 {
    /* TODO 4: For narrow screens, the layout doesn't look good anymore.

    Let's have all children have the same size, and have two in the first row and two in the second row.

    You can do this with "flex: 1 1 50%;" applied to all children.

    This will:

    - Override the flex property you previously set for item 3.
    - Set each item to fill 50% of the size of the flexbox
    - Let each item shrink and grow at the same rate

    Notice how the layout looks better now for narrow screens
    */
  }
}

@media all and (max-width: 560px) {
  /* Another media query, telling the browser to apply these styles only for screens no wider than 560px */
  .item1, .item2, .item3, .item4 {
    /* TODO 5: For very narrow screens (< 560px) the layout looks cramped again. Let's fix it. I wrote the media query for you.

    Let's have one element per row.

    Following what you did previously, you can use "flex: 1 1 100%;".

    You're overwriting the previous flex value, and now each child fills 100% of the size of the flexbox.

    Elements are already wrapping, since we set the flex-wrap property in the previous media query.
    */
  }
  .item3 {
    /* TODO 6: Re-order the item 3 to be shown last. Since the default value for order is 0, you could do this with "order: 1;" */
  }
}